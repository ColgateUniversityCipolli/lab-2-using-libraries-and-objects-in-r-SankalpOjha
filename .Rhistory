track.files
curr.track <- track.files[y]
curr.track
for(i in 1:length(album)){
curr.album <- file.paths[album[i]]
track.files <- list.files(file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(file.paths[album[i]])){
curr.track <- track.files[y]
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
length(file.paths[album[i]])
track.files[y]
curr.track
for(i in 1:length(album)){
curr.album <- file.paths[album[i]]
track.files <- list.files(file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(file.paths[album[i]])){
curr.track <- track.files[y]
songnames <- track.files[y]
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
(songnames)
for(i in 1:length(album)){
curr.album <- file.paths[album[i]]
track.files <- list.files(file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(file.paths[album[i]])){
curr.track <- track.files[y]
songnames <- c(track.files[y])
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
(songnames)
songnames <- c()
for(i in 1:length(album)){
curr.album <- file.paths[album[i]]
track.files <- list.files(file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(file.paths[album[i]])){
curr.track <- track.files[y]
songnames <- c(track.files[y])
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
(songnames)
songnames <- c()
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
for(i in 1:length(album)){
track.files <- list.files(file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(list.files(file.paths[album[i]]))){
songnames <- c(track.files[y])
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
(songnames)
songnames <- c()
for(i in 1:length(album)){
track.files <- list.files(file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(list.files(track.files){
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
for(i in 1:length(album)){
track.files <- list.files(file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(list.files(track.files))){
songnames <- c(track.files[y])
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
(songnames)
track.files[y]
songnames <- c()
i = 1
track.files <- list.files(file.paths[album[i]])
track.files <- list.files(file.paths[album[i]])
track.files
y=1
songnames <- c(track.files[y])
songnames
length(list.files(track.files))
track.files
length(track.files)
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
for(i in 1:length(album)){
#i = 1
track.files <- list.files(file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(track.files)){
#y=1
songnames <- c(track.files[y])
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
(songnames)
length(track.files)
songnames
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
for(i in 1:length(album)){
#i = 1
track.files <- list.files(file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(track.files)){
#y=1
songnames <- c(songnames, track.files[y])
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
(songnames)
list.files(file.paths[album[i]]
(file.paths[album[i]])
i = 1
i = 1
track.files <- list.files(file.paths[album[i]])
track.files
length(track.files)
y=1
songnames <- c(songnames, track.files[y])
songnames
songnames <- c()
i = 1
track.files <- list.files(file.paths[album[i]])
track.files
y=1
songnames <- c(songnames, track.files[y])
songnames
y=2
songnames <- c(songnames, track.files[y])
songnames
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
for(i in 1:length(album)){
#i = 1
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(track.files)){
#y=2
songnames <- c(songnames, track.files[y])
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
(songnames)
list.files(path = file.paths[album[i]]
track.files
songnames <- c()
songnames <- c()
i = 1
track.files <- list.files(path = file.paths[album[i]])
track.files
length(track.files)
y=1
songnames <- c(songnames, track.files[y])
songnames
songnames <- c(songnames, track.files[y])
songnames
songnames <- c()
i = 1
track.files <- list.files(path = file.paths[album[i]])
y=1
songnames <- c(songnames, track.files[y])
songnames
y=2
songnames <- c(songnames, track.files[y])
songnames
songnames <- c()
i = 1
track.files <- list.files(path = file.paths[album[i]])
y=1
songnames = c(songnames, track.files[y])
songnames
y=2
songnames = c(songnames, track.files[y])
songnames
i = 2
track.files <- list.files(path = file.paths[album[i]])
y=1
songnames = c(songnames, track.files[y])
songnames
y=2
songnames = c(songnames, track.files[y])
songnames
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
for(i in 1:length(album)){
#i = 2
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in length(track.files)){
#y=2
songnames = c(songnames, track.files[y])
#albumnames[y] <- dir(path = file.paths[album[i]])
}
}
(songnames)
###############################################################################
#LAB 2 (Tasks 1 & 2)
###############################################################################
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
track.files <- list.files(path = file.paths[album[i]])
track.files
songnames <- c()
for(i in 1:length(album)){
#i = 2
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in 1:length(track.files)){
#y=2
songnames = c(songnames, track.files[y])
}
}
(songnames)
?paste()
###############################################################################
#LAB 2 (Tasks 1 & 2)
###############################################################################
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
for(i in 1:length(album)){
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in 1:length(track.files)){
songnames = c(songnames, track.files[y])
}
}
(songnames)
full.file.location = paste(album[i], track.files[y])
full.file.location
full.file.location = paste(file.paths[album[i]], track.files[y])
full.file.location
###############################################################################
#LAB 2 (Tasks 1 & 2)
###############################################################################
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
for(i in 1:length(album)){
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in 1:length(track.files)){
songnames = c(songnames, track.files[y])
full.file.location = paste(file.paths[album[i]], track.files[y],
sep = "/")
}
}
(songnames)
(full.file.location)
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
code.to.process <- c()
for(i in 1:length(album)){
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in 1:length(track.files)){
songnames = c(songnames, track.files[y])
code.to.process <- c(code.to.process, paste(file.paths[album[i]],
track.files[y],
sep = "/"))
}
}
(songnames)
(code.to.process)
?str
?str_sub
i=1
song.name.nowav <- c(str_sub(full.file.location[i], -3))
song.name.nowav
i=1
song.name.nowav <- c(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location)-3)))
song.name.nowav
i=1
song.name.nowav <- c(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location)-6)))
song.name.nowav
full.file.location[i]
###############################################################################
#LAB 2 (Tasks 1 & 2)
###############################################################################
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
full.file.location <- c()
code.to.process <- c()
for(i in 1:length(album)){
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in 1:length(track.files)){
songnames = c(songnames, track.files[y])
full.file.location <- c(full.file.location, paste(file.paths[album[i]],
track.files[y],
sep = "/"))
}
}
(songnames)
(full.file.location)
song.name.nowav <- c()
for(i in 1:length(songnames)){
song.name.nowav <- c(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location)-6)))
}
(song.name.nowav)
for(i in 1:length(songnames)){
song.name.nowav <- c(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location)-6)))
}
###############################################################################
#LAB 2 (Tasks 1 & 2)
###############################################################################
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
full.file.location <- c()
code.to.process <- c()
for(i in 1:length(album)){
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in 1:length(track.files)){
songnames = c(songnames, track.files[y])
full.file.location <- c(full.file.location, paste(file.paths[album[i]],
track.files[y],
sep = "/"))
}
}
(songnames)
(full.file.location)
song.name.nowav <- c()
for(i in 1:length(songnames)){
song.name.nowav <- c(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location)-6)))
}
(song.name.nowav)
###############################################################################
#LAB 2 (Tasks 1 & 2)
###############################################################################
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
full.file.location <- c()
code.to.process <- c()
for(i in 1:length(album)){
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in 1:length(track.files)){
songnames = c(songnames, track.files[y])
full.file.location <- c(full.file.location, paste(file.paths[album[i]],
track.files[y],
sep = "/"))
}
}
(songnames)
(full.file.location)
song.name.nowav <- c()
for(i in 1:length(songnames)){
song.name.nowav <- c(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
}
(song.name.nowav)
i = 1
song.name.nowav <- c(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
song.name.nowav
song.name.nowav <- c()
i = 2
song.name.nowav <- c(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
song.name.nowav
i = 3
song.name.nowav <- c(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
song.name.nowav
###############################################################################
#LAB 2 (Tasks 1 & 2)
###############################################################################
library("stringr")
#Finding the path for the files
(file.paths <- list.dirs(path = "Music", full.names = TRUE, recursive = TRUE))
list.files(path = "Music")
#Sifting to find which elements in the vector which have two /
(album <- which((str_count(file.paths, "/")) == 2))
songnames <- c()
full.file.location <- c()
code.to.process <- c()
for(i in 1:length(album)){
track.files <- list.files(path = file.paths[album[i]])
# filter to ensure the files are .wav files
for(y in 1:length(track.files)){
songnames = c(songnames, track.files[y])
full.file.location <- c(full.file.location, paste(file.paths[album[i]],
track.files[y],
sep = "/"))
}
}
(songnames)
(full.file.location)
song.name.nowav <- c()
for(i in 1:length(songnames)){
song.name.nowav <- c(song.name.nowav, str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
}
(song.name.nowav)
?str_split
i=1
song.name.nowav <- c(song.name.nowav, str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
str_split(song.name.nowav, pattern, n = Inf, simplify = FALSE)
i=1
song.name.nowav <- c(song.name.nowav, str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
str_split_1(song.name.nowav, "-")
song.name.nowav <- c()
song.name.nowav <- c(song.name.nowav, str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
str_split_1(song.name.nowav, "-")
i=2
song.name.nowav <- c(song.name.nowav, str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
str_split_1(song.name.nowav, "-")
song.name.nowav <- c()
i=1
song.name.nowav <- c(song.name.nowav, str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
str_split_1(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)),
"-")
i=2
song.name.nowav <- c(song.name.nowav, str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
str_split_1(str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)),
"-")
song.name.nowav <- c()
song.name.justtrack <- c()
for(i in 1:length(songnames)){
song.name.nowav <- c(song.name.nowav, str_sub(full.file.location[i], start = 1,
end = (length(full.file.location[i])-6)))
song.name.justtrack <- c(song.name.justtrack,
str_split_1(str_sub(full.file.location[i],
start = 1,
end = (length(full.file.location[i])-6)),
"-"))
}
(song.name.nowav)
(song.name.justtrack)
